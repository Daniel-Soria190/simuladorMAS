/* autogenerated by Processing revision 1293 on 2023-09-26 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import com.krab.lazy.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class proyecto extends PApplet {



LazyGui gui;
// Variables
// vectores de datos importados
float[] x, velocidad, aceleracion, fuerza, ejex, ejey;
// magnitudes exportadas
float distancia, amplitud, masa, carga, ancho, alto;
PrintWriter output;

int frame = 0; //<>//

public void setup() {
    /* size commented out by preprocessor */;
    frameRate(120);
    gui = new LazyGui(this);
    gui.slider("basico/distancia");
    gui.slider("basico/amplitud");
    gui.slider("avanzado/distancia");
    gui.slider("avanzado/amplitud");
    gui.slider("avanzado/masa");
    gui.slider("avanzado/carga");
    textSize(16);
    distancia = 1;
    amplitud = 0.1f;
    masa = 1.67e-27f;
    carga = 1.6e-19f;
    ancho = (2*amplitud);
    alto = (distancia);
    escribeDatos();
    delay(1000);
    python();
    delay(3000);
    cargaDatos();   
}

public void draw() {
    background(255, 255, 255);
    dibujaEjes();
    fill(0, 255, 255);
    if (frame >= x.length) {
        frame = 0;
    }
    circle(posX(x[frame]), posy(0), 15);
    fill(255,0,0);
    circle(posX(0), posy(-distancia/2),15);
    circle(posX(0), posy(distancia/2),15);
    fill(0,0,0);
    text(str(-amplitud),15,20+ height/2);
    text(str(amplitud),width-40,20+ height/2);
    text(str(distancia/2),15 + width/2,15);
    text(str(-distancia/2),15 + width/2,height-15);
    fill(255,255,255);
    rect(7*(width/10), 7*(height/10), 3*(width/10), 3*(height/10));
    fill(0,0,0);
    text("Fuerza = "+str(fuerza[frame]), 3*(width/4), 12*(height/16));
    text("Posicion = "+str(x[frame]), 3*(width/4), 13*(height/16));
    text("Velocidad = "+str(velocidad[frame]), 3*(width/4), 14*(height/16));
    text("Aceleracion = "+str(aceleracion[frame]), 3*(width/4), 15*(height/16));

    if(gui.button("basico/Aplicar")){
      actualizaBasico();
    }
    if(gui.button("avanzado/Aplicar")){
      actualizaAvanzado();
    }

    frame ++;
}
public void escribeDatos(){
    output = createWriter("datos_java.csv");
    output.print(distancia+","+amplitud+","+masa+","+carga);
    output.flush();
    output.close();

}

public void actualizaBasico(){
    noLoop();
    distancia = gui.slider("basico/distancia");
    amplitud = gui.slider("basico/amplitud");
    if (amplitud>distancia) {
        loop();
        fill(255,0,0);
        text("La amplitud no puede ser mayor a la distancia", width/2,height/2);
        noLoop();
    }else {
    ancho = (2*amplitud);
    alto = (distancia);
    escribeDatos();
    delay(1000);
    python();
    delay(3000);
    cargaDatos();
    loop();
    }
}

public void actualizaAvanzado(){
    noLoop();
    distancia = gui.slider("avanzado/distancia");
    amplitud = gui.slider("avanzado/amplitud");
    if (amplitud>distancia) {
        loop();
        fill(255,0,0);
        text("La amplitud no puede ser mayor a la distancia", width/2,height/2);
        noLoop();
    }else {
    ancho = (2*amplitud);
    alto = (distancia);
    masa = gui.slider("avanzado/masa");
    carga = gui.slider("avanzado/carga");
    escribeDatos();
    delay(1000);
    python();
    delay(3000);
    cargaDatos();
    loop();
    }
}


public void python(){
    try {
        String cmd = "./calcula.sh"; 
        Runtime.getRuntime().exec(cmd); 
    } catch (IOException ioe) {
	    System.out.println (ioe);
    }
}

public void cargaDatos(){
    String[] renglones = loadStrings("datos.csv");
    int numDatos = renglones.length;
    x = new float[numDatos]; //<>//
    velocidad = new float[numDatos]; //<>//
    aceleracion = new float[numDatos]; //<>//
    fuerza = new float[numDatos]; //<>//
    //cargar los datos
    for (int i = 0; i < numDatos; ++i) {
        String[] dato = split(renglones[i], ',');
        x[i] = PApplet.parseFloat(dato[0]);
        velocidad[i] = PApplet.parseFloat(dato[1]);
        aceleracion[i] = PApplet.parseFloat(dato[2]);
        fuerza[i] = PApplet.parseFloat(dato[3]);
    }
}

public float posX(float _x){
    return(((_x*width)/ancho)+(width/2));
}

public float posy(float _y){
    return(((_y*height)/alto)+(height/2));
}

public void dibujaEjes(){
    fill(0,0,0);
    float espx, espy;
    espx = width/10;
    espy = height/10;
    for (int i = 0; i <= 10; ++i) {
        line(i*espx, 0, i*espx, height);
        line(0, espy*i, width, espy*i);
    }
}


  public void settings() { size(1024, 1024, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "proyecto" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
